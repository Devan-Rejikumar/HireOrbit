generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Application {
  id                String   @id @default(cuid())
  jobId             String
  userId            String
  companyId         String
  status            ApplicationStatus @default(PENDING)
  coverLetter       String
  expectedSalary    String
  availability      String
  experience        String
  resumeUrl         String?
  appliedAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  // Relations
  statusHistory     ApplicationStatusHistory[]
  notes             ApplicationNotes[]
  
  @@map("applications")
}

model ApplicationStatusHistory {
  id            String   @id @default(cuid())
  applicationId String
  status        ApplicationStatus
  changedAt     DateTime @default(now())
  changedBy     String   // userId or companyId
  reason        String?
  
  application   Application @relation(fields: [applicationId], references: [id], onDelete: Cascade)
  
  @@map("application_status_history")
}

model ApplicationNotes {
  id            String   @id @default(cuid())
  applicationId String
  note          String
  addedBy       String   // userId or companyId
  addedAt       DateTime @default(now())
  
  application   Application @relation(fields: [applicationId], references: [id], onDelete: Cascade)
  
  @@map("application_notes")
}

enum ApplicationStatus {
  PENDING
  REVIEWING
  SHORTLISTED
  REJECTED
  ACCEPTED
  WITHDRAWN
}