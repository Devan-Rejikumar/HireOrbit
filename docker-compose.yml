services:
  postgres:
    image: postgres:15-alpine
    container_name: job-portal-db
    environment:
      POSTGRES_DB: job_portal
      POSTGRES_USER: job_portal_user
      POSTGRES_PASSWORD: devan
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U job_portal_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: job-portal-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: job-portal-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: job-portal-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9002:9002"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9002
      KAFKA_JMX_HOSTNAME: localhost

  user-service:
    build: ./user-service
    container_name: user-service
    expose:
      - "3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://job_portal_user:devan@postgres:5432/job_portal
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./user-service:/app
      - /app/node_modules

  company-service:
    build: ./company-service
    container_name: company-service
    expose:
      - "3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://job_portal_user:devan@postgres:5432/job_portal
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./company-service:/app
      - /app/node_modules

  job-service:
    build: ./job-service
    container_name: job-service
    expose:
      - "3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - DATABASE_URL=postgresql://job_portal_user:devan@postgres:5432/job_portal
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./job-service:/app
      - /app/node_modules

  application-service:
    build: ./application-service
    container_name: application-service
    expose:
      - "3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
      - DATABASE_URL=postgresql://job_portal_user:devan@postgres:5432/job_portal
      - KAFKA_BROKERS=kafka:29092
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
    volumes:
      - ./application-service:/app
      - /app/node_modules

  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "4006:4005"
    environment:
      - NODE_ENV=development
      - PORT=4005
      - KAFKA_BROKERS=kafka:29092
      - FRONTEND_URL=http://localhost:3000
      - MONGODB_URL=your-atlas-connection-string-here
    depends_on:
      kafka:
        condition: service_started
    volumes:
      - ./notification-service:/app
      - /app/node_modules

  api-gateway:
    build: ./customAPI-gateway
    container_name: api-gateway
    ports:
      - "4001:4000"
    environment:
      - NODE_ENV=development
      - PORT=4000
    volumes:
      - ./customAPI-gateway:/app
      - /app/node_modules
    depends_on:
      - user-service
      - company-service
      - job-service
      - application-service
      - notification-service

  loki:
    image: grafana/loki:latest
    container_name: job-portal-loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml

  prometheus:
    image: prom/prometheus:latest
    container_name: job-portal-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus-config.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana:latest
    container_name: job-portal-grafana
    ports:
      - "3030:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
      - loki

volumes:
  postgres_data:
  redis_data:
  loki_data:
  prometheus_data:
  grafana_data: